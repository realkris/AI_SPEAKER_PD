# Import necessary modules from Flask and a custom function from runner.py
from flask import Flask, request, render_template, url_for, redirect
from runner import generate

# Initialize the Flask application and specify the static files' URL path and folder
app = Flask(__name__, static_url_path='/static', static_folder='static')

# Define the route for the homepage
@app.route('/')
def index():
    # Serve the index.html template
    return render_template('index.html')

# Define the route to process the form input, allowing only POST requests
@app.route('/process_input', methods=['POST'])
def process_input():
    # Retrieve the 'subtitles' field from the submitted form
    subtitles = request.form['subtitles']
    
    # Check if subtitles have a specific value or are empty
    if subtitles == "Hello everyone! I am an AI speaker, ready to articulate your thoughts into spoken words." or not subtitles:
        video_filename = 'default.mp4' # Use the default video if conditions are met
    else:
        # Call the custom function 'generate' with subtitles as an argument if user has enter new subtitles
        generate(subtitles=subtitles)
        video_filename = 'output.mp4'  # Use the output video generated by the 'generate' function

    # Redirect to the 'result' route, passing the video filename as a query parameter
    return redirect(url_for('result', video_filename=video_filename))

# Define the route for the result page
@app.route('/result')
def result():
    # Retrieve the 'video_filename' query parameter, defaulting to 'default.mp4'
    video_filename = request.args.get('video_filename', 'default.mp4')
    
    # Generate the path for the video file to be served from the static folder
    video_path = url_for('static', filename=video_filename)
    
    # Serve the result.html template, passing the video path to be used in the template
    return render_template('result.html', video_path=video_path)

# Condition to run the Flask application when this script is executed directly
if __name__ == "__main__":
    app.run(debug=False)  # Run the application with debug mode enabled


